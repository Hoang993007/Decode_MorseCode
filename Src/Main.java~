//MAIN CLASS
package main;

import java.util.Scanner;
import java.io.*;
import com.opencsv.CSVReader;

//my package
//import transferCode;

class Main{
    
    private static String[] codeTableInput;
    private static String[] codeTableOutput;

    //private String splitBy=",";
    //Function <String>.split(splitBy);

    public static void main(String args[]) throws IOException{

	Scanner scan=new Scanner(System.in);

	getCodeTable rcd=new getCodeTable("Morse","Alphabet");
	codeTableInput=rcd.getCodeTableInput();
	codeTableOutput=rcd.getCodeTableOutput();

	File inputFile=new File("EnCodeFile/input.txt");
	FileReader inputReader=new FileReader(inputFile);
	
	File outputFile=new File("DeCodeFile/output.txt");
	FileWriter outputWriter=new FileWriter(outputFile);

	String character=new String("");
	String tmp=new String();
        TransferCode tsfc=new TransferCode(codeTableInput, codeTableOutput);

	int tmpInt;
	while((tmpInt=inputReader.read())!=-1){
	    tmp=String.valueOf((char)tmpInt);
	    if(codeTableInput[2].equals("")){
		character=tmp;
                tsfc.putChar(character);
		System.out.print(tsfc.getChar());
                System.out.print(codeTableOutput[2]);
		character=new String("");
	    }else{
		if(tmp.equals(codeTableInput[2])||tmp.equals(codeTableInput[3])||tmp.equals(String.valueOf('\n'))){
		    if(!character.equals("")){
			tsfc.putChar(character);
		        System.out.print(tsfc.getChar());
                        System.out.print(codeTableOutput[2]);
                        }
		    character=tmp;
                    if(tmp.equals(String.valueOf('\n')))
System.out.print(character);
else{
		    tsfc.putChar(character);
		    System.out.print(tsfc.getChar());
System.out.print(codeTableOutput[2]);}
		    character=new String("");
		}else character=character+tmp;
	    }
	}

	outputWriter.close();
	inputReader.close();
    }
}

    class TransferCode{

    private String[] codeTableInput;
    private String[] codeTableOutput;
    private int numOfCodeChar;

    private String inputChar;
    private String outputChar;
    
    public TransferCode(String[] codeTableInput, String[] codeTableOutput){
	this.codeTableInput=codeTableInput;
	this.codeTableOutput=codeTableOutput;
        numOfCodeChar=codeTableInput.length;
    }

    public void putChar(String inputChar){
	this.inputChar=inputChar;
        //System.out.println("*"+inputChar+"*");
	int i=1;

	while(i<numOfCodeChar&&!inputChar.equals(codeTableInput[i])) i=i+1;

	if(i==numOfCodeChar)
	    outputChar=codeTableOutput[1];//ký tự lỗi trong dãy outputCode
	else outputChar=codeTableOutput[i];
    }

    public String getChar(){
	return outputChar;
    }
}

class getCodeTable{
    
    private String[] codeTableInput;
    private String[] codeTableOutput;
    private String error;
    //private String splitBy=",";
    //Function <String>.split(splitBy);
    
    public getCodeTable(String codeInput, String codeOutput) throws IOException{
	File fileCode=new File("CodeTable/CodeTable.csv");
	int errorCode=0;//NO ERRORS
	try{
	    FileReader fileReader=new FileReader(fileCode);
	    CSVReader reader= new CSVReader(fileReader);

	reader.readNext();

	String[] tmp;
	
	int flag=0;
	while(flag!=2&&(tmp=reader.readNext())!=null){
	    if(tmp[0].equals(codeOutput)){

		this.codeTableOutput=tmp;
		flag=flag+1;
	    }
	    else if(tmp[0].equals(codeInput)){
		this.codeTableInput=tmp;
		flag=flag+1;
	    }
	    else reader.readNext();
	}
	
	//If the program could not find code table?
	
	//CHECK
	/*for(String token: codeTableInput){
	    System.out.println(token);
	}
	for(String token: codeTableOutput){
	    System.out.println(token);
	    }*/

	fileReader.close();
	reader.close();
	}catch(IOException e){
	    e.printStackTrace();
	    errorCode=1;//ERROR
	}
    }

    public String[] getCodeTableInput(){
	return codeTableInput;
    }

    public String[] getCodeTableOutput(){
	return codeTableOutput;
    }

    public String getError(){
	return error;
    }
}
